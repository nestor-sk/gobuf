// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package FBPRFileMarina

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Matrix struct {
	_tab flatbuffers.Struct
}

func (rcv *Matrix) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Matrix) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Matrix) A() float32 {
	return rcv._tab.GetFloat32(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *Matrix) MutateA(n float32) bool {
	return rcv._tab.MutateFloat32(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *Matrix) B() float32 {
	return rcv._tab.GetFloat32(rcv._tab.Pos + flatbuffers.UOffsetT(4))
}
func (rcv *Matrix) MutateB(n float32) bool {
	return rcv._tab.MutateFloat32(rcv._tab.Pos+flatbuffers.UOffsetT(4), n)
}

func (rcv *Matrix) C() float32 {
	return rcv._tab.GetFloat32(rcv._tab.Pos + flatbuffers.UOffsetT(8))
}
func (rcv *Matrix) MutateC(n float32) bool {
	return rcv._tab.MutateFloat32(rcv._tab.Pos+flatbuffers.UOffsetT(8), n)
}

func (rcv *Matrix) D() float32 {
	return rcv._tab.GetFloat32(rcv._tab.Pos + flatbuffers.UOffsetT(12))
}
func (rcv *Matrix) MutateD(n float32) bool {
	return rcv._tab.MutateFloat32(rcv._tab.Pos+flatbuffers.UOffsetT(12), n)
}

func (rcv *Matrix) Tx() float32 {
	return rcv._tab.GetFloat32(rcv._tab.Pos + flatbuffers.UOffsetT(16))
}
func (rcv *Matrix) MutateTx(n float32) bool {
	return rcv._tab.MutateFloat32(rcv._tab.Pos+flatbuffers.UOffsetT(16), n)
}

func (rcv *Matrix) Ty() float32 {
	return rcv._tab.GetFloat32(rcv._tab.Pos + flatbuffers.UOffsetT(20))
}
func (rcv *Matrix) MutateTy(n float32) bool {
	return rcv._tab.MutateFloat32(rcv._tab.Pos+flatbuffers.UOffsetT(20), n)
}

func CreateMatrix(builder *flatbuffers.Builder, a float32, b float32, c float32, d float32, tx float32, ty float32) flatbuffers.UOffsetT {
	builder.Prep(4, 24)
	builder.PrependFloat32(ty)
	builder.PrependFloat32(tx)
	builder.PrependFloat32(d)
	builder.PrependFloat32(c)
	builder.PrependFloat32(b)
	builder.PrependFloat32(a)
	return builder.Offset()
}
